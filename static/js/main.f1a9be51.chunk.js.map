{"version":3,"sources":["theme.js","components/GeoMap.js","components/DoughnutChart.js","components/PieChartResidency.js","components/PieChartPTFT.js","components/BarGraphForAge.js","components/StudentEnrolledLineChart.js","components/FacultyBarGraph.js","components/PieChartGradUngrad.js","components/AreaGraphCGPA.js","components/BarGraphCountryPop.js","components/TotalStudentsMeter.js","filters.js","utils/fetch.js","utils/endpoints.js","utils/apiStore.js","MainDashboard.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","fontFamily","fontSize","useNextVariants","responsiveFontSizes","Geomap","props","svgRef","useRef","wrapperRef","margin","width","height","svg","d3","current","insert","projection","geoMercator","scale","translate","pathGenerator","geoPath","selectAll","data","features","join","attr","feature","style","on","d","this","append","text","properties","name","colors","domain","range","api","enter","longitude","latitude","count","ref","marginBottom","textAlign","animatePie","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","gender","stroke","r","toFixed","DoughnutChart","onPieEnter","index","setState","activeIndex","expandedForm","expandedDataArray","map","item","state","length","left","top","bottom","right","activeShape","dataKey","onMouseEnter","PureComponent","COLORS","PieChartResidency","residency","label","entry","key","content","active","backgroundColor","border","borderRadius","padding","fontWeight","pt_ft","PieChartPTFT","BarGraphForAge","strokeDasharray","StudentEnrolledLineChart","marginTop","interval","type","activeDot","scaleOrdinal","schemeCategory10","getPath","TriangleBar","FacultyBarGraph","shape","position","level","PieChartGradUngrad","AreaGraphCGPA","BarGraphCountryPop","modifiedData","slice","citizenship","tempObject","TotalStudentsMeter","maxValue","styles","root","FilterBar","setGenderFilter","setCountryFilter","countries","faculties","setFacultyFilter","setYearFilter","setGradStatusFilter","List","Divider","ListItem","button","Autocomplete","multiple","id","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","TextField","variant","onChange","_","method","url","bodyData","Promise","resolve","reject","a","body","Object","keys","fetch","response","headers","json","baseURL","fetchCountries","fetchStudentsByYear","fetchGenders","fetchAge","fetchLevel","fetchResidency","fetchPtFt","fetchFaculty","fetchCGPA","fetchFaculties","fetchTotalStudents","fetchCountriesStudent","fetchApi","setStudentsByYears","countryFilter","facultyFilter","genderFilter","yearFilter","gradStatusFilter","genderFilterModified","forEach","push","country","faculty","year","endpoints","StudentsByYear","students","student","Enroll_Year","total","console","log","setCountries","resp","countryArray","setFaculties","facultiesArray","fetchJsonCountries","setJsonCountries","JsonCountry","setGendersData","setAgeData","studentsByAgeArray","entries","tempObj","group","substring","setLevelData","setResidencyData","setPtFtData","setFacultyData","setTotalStudentsfiltered","setCGPA","studentsByCGPA","setCountriesByStudentCount","useStyles","makeStyles","display","appBar","marginLeft","drawer","flexShrink","drawerPaper","pieCard","maxWidth","lineChart","meter","ageBar","halfPie","ptftPie","facultySpikyBar","gradStat","cgpaGraph","toolbar","mixins","flexGrow","background","default","spacing","DashboardMain","classes","useState","studentByYearData","setStudentByYearData","gendersData","ageData","levelData","residencyData","ptftData","setptftData","facultyData","JsonCountries","cgpa","totalStudentsfiltered","openModal","toggleModal","currentVisualization","setCurrentVisualization","countriesByStudentCount","visualizations","mapGraph","Card","className","GeoMap","genderGraph","ageGraph","meterGraph","lineGraph","facultyGraph","gradStatusGraph","countryPop","FilterBarProps","useEffect","handleOpen","handleClose","CssBaseline","AppBar","Toolbar","Typography","noWrap","Drawer","paper","anchor","Modal","open","onClose","justifyContent","alignItems","onClick","flex","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f1a9be51.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#C5CAE9\",\r\n      main: \"#3F51B5\",\r\n      dark: \"#303F9F\"\r\n    },\r\n    secondary: {\r\n      light: \"#BBDEFB\",\r\n      main: \"#2196F3\",\r\n      dark: \"#1976D2\"\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\r\n    fontSize: 16,\r\n    useNextVariants: true\r\n  }\r\n});\r\nexport default responsiveFontSizes(theme);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { select, geoPath, geoMercator } from \"d3\";\r\nimport \"./Geomap.css\";\r\n\r\nfunction Geomap(props) {\r\n  // console.log(data)\r\n  // console.log(props.api)\r\n  // const [geographies, setGeographies] = useState([])\r\n\r\n  // fetch(\"http://140.184.230.103:5000/api\")\r\n  //     .then(response => {\r\n  //         if (response.status !== 200){\r\n  //             console.log(`there was a problem:`)\r\n  //             return\r\n  //         }\r\n  //         response.json().then(worlddata => {\r\n  //             // console.log(worlddata)\r\n  //             setGeographies(worlddata)\r\n  //             // console.log(geographies)\r\n  //         })\r\n  //     })\r\n  // console.log(data.features)\r\n\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  var margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n\r\n  var width = 800 - margin.left - margin.right;\r\n  var height = 400 - margin.top - margin.bottom;\r\n\r\n  // console.log(Countries.features)\r\n  const svg = d3.select(svgRef.current).insert(\"svg\");\r\n\r\n  //  use resized dimensions\r\n  // but fall back to getBoundingClientRect, if no dimensions yet.\r\n  // const { width, height } =\r\n  //   dimensions || wrapperRef.current.getBoundingClientRect();\r\n  const projection = geoMercator().scale(120).translate([400, 200]);\r\n  const pathGenerator = geoPath().projection(projection);\r\n\r\n  svg\r\n    .selectAll(\".country\")\r\n    .data(props.data.features)\r\n    .join(\"path\")\r\n    .attr(\"class\", \"country\")\r\n    .attr(\"d\", (feature) => pathGenerator(feature))\r\n    .attr(\"fill\", \"#ccc\")\r\n    .style(\"stroke\", \"black\")\r\n    .style(\"stroke-width\", 0.5)\r\n    .on(\"mouseover\", function (d) {\r\n      //    console.log(d)\r\n      d3.select(this)\r\n        .style(\"fill\", \"#6C0\")\r\n        .append(\"svg\")\r\n        .text(d.properties.name);\r\n    })\r\n    .on(\"mouseout\", function (d) {\r\n      d3.select(this).style(\"fill\", \"#ccc\");\r\n    });\r\n\r\n  var colors = d3\r\n    .scaleThreshold()\r\n    .domain([0, 10, 50, 100, 500, 20289])\r\n    .range([\"#000000\", \"#ffab00\", \"#00c853\", \"#3e2723\", \"#304ffe\", \"#d50000\"]);\r\n\r\n  //\r\n\r\n  //  will be called initially and on every data change\r\n  //  useEffect(() => {\r\n  //     console.log(api)\r\n\r\n  svg\r\n    .append(\"g\")\r\n    // .attr(\"class\", \"bubble\")\r\n    .selectAll(\".circles\")\r\n    .data(props.api)\r\n    .enter()\r\n    .append(\"circle\")\r\n    .attr(\"class\", \"circles\")\r\n    .attr(\"cx\", function (d) {\r\n      return projection([d.longitude, d.latitude])[0];\r\n    })\r\n    .attr(\"cy\", function (d) {\r\n      return projection([d.longitude, d.latitude])[1];\r\n    })\r\n    .attr(\"r\", function (d) {\r\n      return 5;\r\n    })\r\n    .attr(\"opacity\", 1)\r\n    .attr(\"fill\", function (d) {\r\n      return colors(d.count);\r\n    });\r\n\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 20)\r\n    .attr(\"cy\", 250)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", \"#ffab00\");\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 20)\r\n    .attr(\"cy\", 280)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", \"#00c853\");\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 20)\r\n    .attr(\"cy\", 310)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", \"#3e2723\");\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 20)\r\n    .attr(\"cy\", 340)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", \"#304ffe\");\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 20)\r\n    .attr(\"cy\", 370)\r\n    .attr(\"r\", 6)\r\n    .style(\"fill\", \"#d50000\");\r\n  svg\r\n    .append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 250)\r\n    .text(\"0-10 students\")\r\n    .style(\"font-size\", \"15px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n  svg\r\n    .append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 280)\r\n    .text(\"10-50 students\")\r\n    .style(\"font-size\", \"15px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n  svg\r\n    .append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 310)\r\n    .text(\"50-100 students\")\r\n    .style(\"font-size\", \"15px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n  svg\r\n    .append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 340)\r\n    .text(\"100-500 students\")\r\n    .style(\"font-size\", \"15px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n  svg\r\n    .append(\"text\")\r\n    .attr(\"x\", 40)\r\n    .attr(\"y\", 370)\r\n    .text(\">500 students\")\r\n    .style(\"font-size\", \"15px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n\r\n  //  },[svg,props.api,projection,colors] )\r\n\r\n  return (\r\n    <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\r\n      <p style={{ textAlign: \"center\" }}>Global BubbleChart</p>\r\n      <svg\r\n        width={width + margin.left + margin.right}\r\n        height={height + margin.top + margin.bottom}\r\n        ref={svgRef}\r\n      ></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Geomap;\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Sector } from \"recharts\";\r\n\r\nconst animatePie = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.gender}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`Count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class DoughnutChart extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n    };\r\n  }\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  expandedForm = (data) => {\r\n    let expandedDataArray = [...data];\r\n    expandedDataArray = expandedDataArray.map((item) => {\r\n      if (item.gender === \"F\") {\r\n        return {\r\n          gender: \"Female\",\r\n          count: item.count,\r\n        };\r\n      } else if (item.gender === \"M\") {\r\n        return {\r\n          gender: \"Male\",\r\n          count: item.count,\r\n        };\r\n      } else if (item.gender === \"N\") {\r\n        return {\r\n          gender: \"Non-Binary\",\r\n          count: item.count,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n    return expandedDataArray;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.props;\r\n    data =\r\n      data.length > 0\r\n        ? this.expandedForm(data)\r\n        : [{ gender: \"Student\", count: 100 }];\r\n\r\n    return (\r\n      <PieChart\r\n        width={500}\r\n        height={400}\r\n        margin={{ left: 50, top: 5, bottom: 5, right: 5 }}\r\n      >\r\n        <Pie\r\n          activeIndex={this.state.activeIndex}\r\n          activeShape={animatePie}\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          innerRadius={60}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"count\"\r\n          onMouseEnter={this.onPieEnter}\r\n        />\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip } from \"recharts\";\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nexport default class PieChartResidency extends PureComponent {\r\n  render() {\r\n    let { data } = this.props;\r\n    data = data.length > 0 ? data : [{ residency: \"Resident\", count: 100 }];\r\n\r\n    const tooltipContent = ({ active, payload }) => {\r\n      if (active) {\r\n        return (\r\n          <div\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              border: \"1px solid black\",\r\n              borderRadius: \"2px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >{`${payload[0].payload.residency} : ${payload[0].payload.count}`}</p>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          dataKey=\"count\"\r\n          startAngle={180}\r\n          endAngle={0}\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          label\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip content={tooltipContent} payload={data} />\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Sector } from \"recharts\";\r\n\r\nconst animatePie = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.pt_ft}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`Count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class PieChartPTFT extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n    };\r\n  }\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.props;\r\n    data = data.length > 0 ? data : [{ pt_ft: \"Part/Full Time\", count: 100 }];\r\n\r\n    return (\r\n      <PieChart\r\n        width={500}\r\n        height={400}\r\n        margin={{ left: 50, top: 5, bottom: 5, right: 5 }}\r\n        fill=\"#d89b27\"\r\n      >\r\n        <Pie\r\n          activeIndex={this.state.activeIndex}\r\n          activeShape={animatePie}\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          innerRadius={60}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"count\"\r\n          onMouseEnter={this.onPieEnter}\r\n        />\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nexport default class BarGraphForAge extends PureComponent {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    return (\r\n      <BarChart\r\n        width={415}\r\n        height={420}\r\n        data={data}\r\n        margin={{\r\n          top: 100,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"group\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"value\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst StudentEnrolledLineChart = (props) => {\r\n  const { data } = props;\r\n  return (\r\n    <LineChart\r\n      width={600}\r\n      height={300}\r\n      data={data}\r\n      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      style={{ marginTop: \"40px\" }}\r\n    >\r\n      <XAxis dataKey=\"Enroll_Year\" interval=\"preserveStart\" />\r\n      <YAxis dataKey=\"total\" interval=\"preserveStart\" />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey=\"total\"\r\n        stroke=\"#8884d8\"\r\n        activeDot={{ r: 8 }}\r\n      />\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default StudentEnrolledLineChart;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport { scaleOrdinal } from \"d3-scale\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\r\n\r\nconst colors = scaleOrdinal(schemeCategory10).range();\r\n\r\nconst getPath = (x, y, width, height) => `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\r\n  x + width / 2\r\n}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\r\n  y + height\r\n} ${x + width}, ${y + height}\r\n          Z`;\r\n\r\nconst TriangleBar = (props) => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nexport default class FacultyBarGraph extends PureComponent {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <BarChart\r\n          width={415}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"faculty\" />\r\n          <YAxis />\r\n          <Bar\r\n            dataKey=\"count\"\r\n            fill=\"#8884d8\"\r\n            shape={<TriangleBar />}\r\n            label={{ position: \"top\" }}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n            ))}\r\n          </Bar>\r\n          <Tooltip />\r\n        </BarChart>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Sector } from \"recharts\";\r\n\r\nconst animatePie = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.level}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`Count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class PieChartGradUngrad extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n    };\r\n  }\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.props;\r\n    data = data.length > 0 ? data : [{ level: \"Level\", count: 100 }];\r\n\r\n    return (\r\n      <PieChart\r\n        width={500}\r\n        height={400}\r\n        margin={{ left: 50, top: 5, bottom: 5, right: 5 }}\r\n        fill=\"#d89b27\"\r\n      >\r\n        <Pie\r\n          activeIndex={this.state.activeIndex}\r\n          activeShape={animatePie}\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          innerRadius={60}\r\n          outerRadius={80}\r\n          fill=\"#fdca53\"\r\n          dataKey=\"count\"\r\n          onMouseEnter={this.onPieEnter}\r\n        />\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\n// const data = [\r\n//   {\r\n//     name: \"Page A\",\r\n//     uv: 4000,\r\n//     pv: 2400,\r\n//     amt: 2400,\r\n//   },\r\n//   {\r\n//     name: \"Page B\",\r\n//     uv: 3000,\r\n//   },\r\n//   {\r\n//     name: \"Page C\",\r\n//     uv: 2000,\r\n//   },\r\n//   {\r\n//     name: \"Page D\",\r\n//     uv: 2780,\r\n//   },\r\n//   {\r\n//     name: \"Page E\",\r\n//     uv: 1890,\r\n//   },\r\n//   {\r\n//     name: \"Page F\",\r\n//     uv: 2390,\r\n//   },\r\n//   {\r\n//     name: \"Page G\",\r\n//     uv: 3490,\r\n//   },\r\n// ];\r\n\r\nexport default class AreaGraphCGPA extends PureComponent {\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    return (\r\n      <AreaChart\r\n        width={900}\r\n        height={400}\r\n        data={data}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"group\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n      </AreaChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nexport default class BarGraphCountryPop extends PureComponent {\r\n  render() {\r\n    const { data } = this.props;\r\n    let modifiedData = [];\r\n    if (data.length >= 1) {\r\n      const slicedData = data.slice(0, 10);\r\n      modifiedData = slicedData.map((item) => {\r\n        if (item.citizenship === \"Peoples Republic of China\") {\r\n          let tempObject = {};\r\n          tempObject.citizenship = \"China\";\r\n          tempObject.count = item.count;\r\n          return tempObject;\r\n        } else if (item.citizenship === \"Antigua and Barbuda\") {\r\n          let tempObject = {};\r\n          tempObject.citizenship = \"A & B\";\r\n          tempObject.count = item.count;\r\n          return tempObject;\r\n        } else if (item.citizenship === \"United States of America\") {\r\n          let tempObject = {};\r\n          tempObject.citizenship = \"U.S.A\";\r\n          tempObject.count = item.count;\r\n          return tempObject;\r\n        } else if (item.citizenship === \"Bangladesh\") {\r\n          let tempObject = {};\r\n          tempObject.citizenship = \"Bangla\";\r\n          tempObject.count = item.count;\r\n          return tempObject;\r\n        }\r\n        return item;\r\n      });\r\n    } else {\r\n      modifiedData = data;\r\n    }\r\n\r\n    return (\r\n      <BarChart\r\n        width={900}\r\n        height={420}\r\n        data={modifiedData}\r\n        margin={{\r\n          top: 100,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"citizenship\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n\r\n        <Bar dataKey=\"count\" fill=\"#82ca9d\" label={{ position: \"top\" }} />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport default function TotalStudentsMeter(props) {\r\n  const { data } = props;\r\n  const TOTAL_STUDENTS = 159950;\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n        value={data}\r\n        text={` ${((data / TOTAL_STUDENTS) * 100).toFixed(2)}%`}\r\n        maxValue={TOTAL_STUDENTS}\r\n        styles={{ root: { padding: \"10px\" }, text: { fontSize: \"10px\" } }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nexport default function FilterBar(props) {\r\n  const {\r\n    setGenderFilter,\r\n    setCountryFilter,\r\n    countries,\r\n    faculties,\r\n    setFacultyFilter,\r\n    setYearFilter,\r\n    setGradStatusFilter,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <Divider />\r\n        <ListItem button key=\"gender-filter\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"gender-outlined\"\r\n            options={[\"Male\", \"Female\", \"Non-Binary\"]}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 280 }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Gender\" />\r\n            )}\r\n            onChange={(_, value) => {\r\n              setGenderFilter(value);\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button key=\"country-filter\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"countries-outlined\"\r\n            options={countries}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 280 }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Country\" />\r\n            )}\r\n            onChange={(_, value) => {\r\n              setCountryFilter(value);\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button key=\"faculties-filter\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"faculties-outlined\"\r\n            options={faculties}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 280 }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Faculty\" />\r\n            )}\r\n            onChange={(_, value) => {\r\n              setFacultyFilter(value);\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button key=\"year-filter\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"year-outlined\"\r\n            options={[\r\n              \"2011\",\r\n              \"2012\",\r\n              \"2013\",\r\n              \"2014\",\r\n              \"2015\",\r\n              \"2016\",\r\n              \"2017\",\r\n              \"2018\",\r\n              \"2019\",\r\n              \"2020\",\r\n            ]}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 280 }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Year\" />\r\n            )}\r\n            onChange={(_, value) => {\r\n              setYearFilter(value);\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <ListItem button key=\"grad-status-filter\">\r\n          <Autocomplete\r\n            multiple\r\n            id=\"gradStatus-outlined\"\r\n            options={[\"Graduate\", \"Undergraduate\"]}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 280 }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Grad Status\" />\r\n            )}\r\n            onChange={(_, value) => {\r\n              setGradStatusFilter(value);\r\n            }}\r\n          />\r\n          <Divider />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","export default (method, url, bodyData = []) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      const body = Object.keys(bodyData)\r\n        .map((key) => `${key}=${bodyData[key]}`)\r\n        .join(\"&\");\r\n      let response;\r\n      if (method === \"GET\") {\r\n        response = await fetch(url);\r\n      } else if (method === \"POST\") {\r\n        response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n          body,\r\n        });\r\n      }\r\n      const data = await response.json();\r\n      if (data) {\r\n        return resolve(data);\r\n      }\r\n      return reject(\"Unable to fetch data!\");\r\n    } catch (e) {\r\n      return reject(e);\r\n    }\r\n  });\r\n","// const baseURL = \"http://localhost:5000/\";\r\nconst baseURL = \"https://pydashboardapi.herokuapp.com/\";\r\nexport default {\r\n  fetchCountries: `${baseURL}countries`,\r\n  fetchStudentsByYear: `${baseURL}students`,\r\n  fetchGenders: `${baseURL}genders`,\r\n  fetchAge: `${baseURL}ages`,\r\n  fetchLevel: `${baseURL}level`,\r\n  fetchResidency: `${baseURL}residency`,\r\n  fetchPtFt: `${baseURL}pt_ft`,\r\n  fetchFaculty: `${baseURL}faculty`,\r\n  fetchCGPA: `${baseURL}cgpa`,\r\n  fetchFaculties: `${baseURL}faculties`,\r\n  fetchTotalStudents: `${baseURL}totalstudents`,\r\n  fetchCountriesStudent: `${baseURL}countries/students`,\r\n  fetchApi: `${baseURL}api`,\r\n};\r\n","import fetch from \"./fetch\";\r\nimport endpoints from \"./endpoints\";\r\n\r\nconst fetchStudentsByYear = async (\r\n  setStudentsByYears,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  try {\r\n    let genderFilterModified = [];\r\n\r\n    if (genderFilter.length > 0) {\r\n      genderFilter.forEach((item) => {\r\n        if (item === \"Male\") {\r\n          genderFilterModified.push(\"M\");\r\n        } else if (item === \"Female\") {\r\n          genderFilterModified.push(\"F\");\r\n        } else if (item === \"Non-Binary\") {\r\n          genderFilterModified.push(\"N\");\r\n        }\r\n      });\r\n    }\r\n\r\n    countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n    facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n    genderFilterModified =\r\n      genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n    yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n    gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n    const body = {\r\n      country: countryFilter,\r\n      faculty: facultyFilter,\r\n      gender: genderFilterModified,\r\n      year: yearFilter,\r\n      level: gradStatusFilter,\r\n    };\r\n\r\n    const StudentsByYear = await fetch(\r\n      \"POST\",\r\n      endpoints.fetchStudentsByYear,\r\n      body\r\n    );\r\n    const students = StudentsByYear.map((student) => ({\r\n      Enroll_Year: +student.Enroll_Year,\r\n      total: student.total,\r\n    }));\r\n    setStudentsByYears(students);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst fetchCountries = async (setCountries) => {\r\n  try {\r\n    const resp = await fetch(\"GET\", endpoints.fetchCountries);\r\n    const countryArray = resp.map((country) => country.citizenship);\r\n    setCountries(countryArray);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst fetchFaculties = async (setFaculties) => {\r\n  try {\r\n    const resp = await fetch(\"GET\", endpoints.fetchFaculties);\r\n    const facultiesArray = resp.map((faculties) => faculties.faculty);\r\n    setFaculties(facultiesArray);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst fetchJsonCountries = async (setJsonCountries) => {\r\n  try {\r\n    const JsonCountry = await fetch(\"GET\", endpoints.fetchApi);\r\n    setJsonCountries(JsonCountry);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst fetchGenders = async (\r\n  setGendersData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchGenders, body);\r\n  setGendersData(resp);\r\n};\r\n\r\nconst fetchAge = async (\r\n  setAgeData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchAge, body);\r\n  let studentsByAgeArray = [];\r\n  Object.entries(resp[0]).forEach(([key, value]) => {\r\n    let tempObj = {};\r\n    tempObj.group = `${key.substring(3, 5)}-${key.substring(7)}`;\r\n    tempObj.value = value;\r\n    studentsByAgeArray.push(tempObj);\r\n  });\r\n\r\n  setAgeData(studentsByAgeArray);\r\n};\r\n\r\nconst fetchLevel = async (\r\n  setLevelData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchLevel, body);\r\n\r\n  setLevelData(resp);\r\n};\r\n\r\nconst fetchResidency = async (\r\n  setResidencyData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchResidency, body);\r\n\r\n  setResidencyData(resp);\r\n};\r\n\r\nconst fetchPtFt = async (\r\n  setPtFtData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchPtFt, body);\r\n\r\n  setPtFtData(resp);\r\n};\r\n\r\nconst fetchFaculty = async (\r\n  setFacultyData,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchFaculty, body);\r\n\r\n  setFacultyData(resp);\r\n};\r\n\r\nconst fetchTotalStudents = async (\r\n  setTotalStudentsfiltered,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchTotalStudents, body);\r\n\r\n  setTotalStudentsfiltered(resp[0].count);\r\n};\r\n\r\nconst fetchCGPA = async (\r\n  setCGPA,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  let genderFilterModified = [];\r\n\r\n  if (genderFilter.length > 0) {\r\n    genderFilter.forEach((item) => {\r\n      if (item === \"Male\") {\r\n        genderFilterModified.push(\"M\");\r\n      } else if (item === \"Female\") {\r\n        genderFilterModified.push(\"F\");\r\n      } else if (item === \"Non-Binary\") {\r\n        genderFilterModified.push(\"N\");\r\n      }\r\n    });\r\n  }\r\n\r\n  countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n  facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n  genderFilterModified =\r\n    genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n  yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n  gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n  const body = {\r\n    country: countryFilter,\r\n    faculty: facultyFilter,\r\n    gender: genderFilterModified,\r\n    year: yearFilter,\r\n    level: gradStatusFilter,\r\n  };\r\n\r\n  const resp = await fetch(\"POST\", endpoints.fetchCGPA, body);\r\n  let studentsByCGPA = [];\r\n  Object.entries(resp[0]).forEach(([key, value]) => {\r\n    let tempObj = {};\r\n    tempObj.group = `${key.substring(4, 5)}-${key.substring(7)}`;\r\n    tempObj.value = value;\r\n    studentsByCGPA.push(tempObj);\r\n  });\r\n\r\n  setCGPA(studentsByCGPA);\r\n};\r\n\r\nconst fetchCountriesStudent = async (\r\n  setCountriesByStudentCount,\r\n  countryFilter,\r\n  facultyFilter,\r\n  genderFilter,\r\n  yearFilter,\r\n  gradStatusFilter\r\n) => {\r\n  try {\r\n    let genderFilterModified = [];\r\n\r\n    if (genderFilter.length > 0) {\r\n      genderFilter.forEach((item) => {\r\n        if (item === \"Male\") {\r\n          genderFilterModified.push(\"M\");\r\n        } else if (item === \"Female\") {\r\n          genderFilterModified.push(\"F\");\r\n        } else if (item === \"Non-Binary\") {\r\n          genderFilterModified.push(\"N\");\r\n        }\r\n      });\r\n    }\r\n\r\n    countryFilter = countryFilter.length === 0 ? \"any\" : countryFilter;\r\n    facultyFilter = facultyFilter.length === 0 ? \"any\" : facultyFilter;\r\n    genderFilterModified =\r\n      genderFilter.length === 0 ? \"any\" : genderFilterModified;\r\n    yearFilter = yearFilter.length === 0 ? \"any\" : yearFilter;\r\n    gradStatusFilter = gradStatusFilter.length === 0 ? \"any\" : gradStatusFilter;\r\n\r\n    const body = {\r\n      country: countryFilter,\r\n      faculty: facultyFilter,\r\n      gender: genderFilterModified,\r\n      year: yearFilter,\r\n      level: gradStatusFilter,\r\n    };\r\n    const resp = await fetch(\"POST\", endpoints.fetchCountriesStudent, body);\r\n    setCountriesByStudentCount(resp);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport {\r\n  fetchStudentsByYear,\r\n  fetchCountries,\r\n  fetchFaculties,\r\n  fetchJsonCountries,\r\n  fetchGenders,\r\n  fetchAge,\r\n  fetchLevel,\r\n  fetchResidency,\r\n  fetchPtFt,\r\n  fetchFaculty,\r\n  fetchTotalStudents,\r\n  fetchCGPA,\r\n  fetchCountriesStudent,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nimport GeoMap from \"./components/GeoMap\";\r\nimport data from \"./components/GeoChart.world.geo.json\";\r\nimport DoughnutChart from \"./components/DoughnutChart\";\r\nimport PieChartResidency from \"./components/PieChartResidency\";\r\nimport PieChartPTFT from \"./components/PieChartPTFT\";\r\nimport BarGraphForAge from \"./components/BarGraphForAge\";\r\nimport StudentEnrolledLineChart from \"./components/StudentEnrolledLineChart\";\r\nimport FacultyBarGraph from \"./components/FacultyBarGraph\";\r\nimport PieChartGradUngrad from \"./components/PieChartGradUngrad\";\r\nimport AreaGraphCGPA from \"./components/AreaGraphCGPA\";\r\nimport BarGraphCountryPop from \"./components/BarGraphCountryPop\";\r\nimport TotalStudentsMeter from \"./components/TotalStudentsMeter\";\r\n\r\nimport FilterBar from \"./filters\";\r\n\r\nimport {\r\n  fetchStudentsByYear,\r\n  fetchCountries,\r\n  fetchFaculties,\r\n  fetchJsonCountries,\r\n  fetchAge,\r\n  fetchGenders,\r\n  fetchLevel,\r\n  fetchResidency,\r\n  fetchPtFt,\r\n  fetchFaculty,\r\n  fetchTotalStudents,\r\n  fetchCGPA,\r\n  fetchCountriesStudent,\r\n} from \"./utils/apiStore\";\r\n\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  pieCard: {\r\n    maxWidth: 500,\r\n  },\r\n  lineChart: {\r\n    maxWidth: 600,\r\n    marginLeft: 35,\r\n  },\r\n  meter: {\r\n    width: 300,\r\n  },\r\n  ageBar: {\r\n    maxWidth: 500,\r\n    marginLeft: 18,\r\n  },\r\n  halfPie: {\r\n    maxWidth: 400,\r\n  },\r\n  ptftPie: {\r\n    maxWidth: 500,\r\n    marginLeft: 35,\r\n  },\r\n  facultySpikyBar: {\r\n    maxWidth: 415,\r\n  },\r\n  gradStat: {\r\n    maxWidth: 500,\r\n    marginLeft: 20,\r\n  },\r\n  map: {\r\n    marginBottom: 20,\r\n  },\r\n  cgpaGraph: {\r\n    marginBottom: 20,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function DashboardMain(props) {\r\n  const classes = useStyles();\r\n\r\n  const [countryFilter, setCountryFilter] = useState([]);\r\n  const [facultyFilter, setFacultyFilter] = useState([]);\r\n  const [genderFilter, setGenderFilter] = useState([]);\r\n  const [yearFilter, setYearFilter] = useState([]);\r\n  const [gradStatusFilter, setGradStatusFilter] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [studentByYearData, setStudentByYearData] = useState([]);\r\n  const [faculties, setFaculties] = useState([]);\r\n  const [gendersData, setGendersData] = useState([]);\r\n  const [ageData, setAgeData] = useState([]);\r\n  const [levelData, setLevelData] = useState([]);\r\n  const [residencyData, setResidencyData] = useState([]);\r\n  const [ptftData, setptftData] = useState([]);\r\n  const [facultyData, setFacultyData] = useState([]);\r\n  const [JsonCountries, setJsonCountries] = useState([]);\r\n  const [cgpa, setCGPA] = useState([]);\r\n  const [totalStudentsfiltered, setTotalStudentsfiltered] = useState(0);\r\n  const [openModal, toggleModal] = useState(false);\r\n  const [currentVisualization, setCurrentVisualization] = useState(\"age\");\r\n  const [countriesByStudentCount, setCountriesByStudentCount] = useState([]);\r\n\r\n  const visualizations = {\r\n    mapGraph: (\r\n      <Card className={classes.map}>\r\n        <GeoMap data={data} api={JsonCountries} />\r\n      </Card>\r\n    ),\r\n    genderGraph: (\r\n      <Card className={classes.pieCard}>\r\n        <DoughnutChart data={gendersData} />\r\n      </Card>\r\n    ),\r\n    ageGraph: (\r\n      <Card className={classes.ageBar}>\r\n        <BarGraphForAge data={ageData} />\r\n      </Card>\r\n    ),\r\n    meterGraph: (\r\n      <Card className={classes.meter}>\r\n        <TotalStudentsMeter data={totalStudentsfiltered} />\r\n        <h1 style={{ marginTop: 0 }}>Students</h1>\r\n      </Card>\r\n    ),\r\n    lineGraph: (\r\n      <Card className={classes.lineChart}>\r\n        <StudentEnrolledLineChart data={studentByYearData} />\r\n      </Card>\r\n    ),\r\n    halfPie: (\r\n      <Card className={classes.halfPie}>\r\n        <PieChartResidency data={residencyData} />\r\n      </Card>\r\n    ),\r\n    ptftPie: (\r\n      <Card className={classes.ptftPie}>\r\n        <PieChartPTFT data={ptftData} />\r\n      </Card>\r\n    ),\r\n    facultyGraph: (\r\n      <Card className={classes.facultySpikyBar}>\r\n        <FacultyBarGraph data={facultyData} />\r\n      </Card>\r\n    ),\r\n    gradStatusGraph: (\r\n      <Card className={classes.gradStat}>\r\n        <PieChartGradUngrad data={levelData} />\r\n      </Card>\r\n    ),\r\n    cgpaGraph: (\r\n      <Card>\r\n        <AreaGraphCGPA data={cgpa} />\r\n      </Card>\r\n    ),\r\n    countryPop: (\r\n      <Card>\r\n        <BarGraphCountryPop data={countriesByStudentCount} />\r\n      </Card>\r\n    ),\r\n  };\r\n\r\n  const FilterBarProps = {\r\n    setGenderFilter,\r\n    setCountryFilter,\r\n    countries,\r\n    faculties,\r\n    setFacultyFilter,\r\n    setYearFilter,\r\n    setGradStatusFilter,\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountries(setCountries);\r\n    fetchFaculties(setFaculties);\r\n    fetchJsonCountries(setJsonCountries);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchStudentsByYear(\r\n      setStudentByYearData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n\r\n    fetchGenders(\r\n      setGendersData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchAge(\r\n      setAgeData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchLevel(\r\n      setLevelData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchResidency(\r\n      setResidencyData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchPtFt(\r\n      setptftData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchFaculty(\r\n      setFacultyData,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchTotalStudents(\r\n      setTotalStudentsfiltered,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n    fetchCGPA(\r\n      setCGPA,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n\r\n    fetchCountriesStudent(\r\n      setCountriesByStudentCount,\r\n      countryFilter,\r\n      facultyFilter,\r\n      genderFilter,\r\n      yearFilter,\r\n      gradStatusFilter\r\n    );\r\n  }, [\r\n    countryFilter,\r\n    facultyFilter,\r\n    genderFilter,\r\n    yearFilter,\r\n    gradStatusFilter,\r\n  ]);\r\n\r\n  const handleOpen = (value) => {\r\n    setCurrentVisualization(value);\r\n    toggleModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    toggleModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Saint Mary's University Students Data Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <FilterBar {...FilterBarProps} />\r\n      </Drawer>\r\n      <Modal open={openModal} onClose={handleClose}>\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onClick={() => handleClose()}\r\n        >\r\n          {visualizations[currentVisualization]}\r\n        </div>\r\n      </Modal>\r\n\r\n      <main className={classes.content}>\r\n        <Card className={classes.map} onClick={() => handleOpen(\"mapGraph\")}>\r\n          <GeoMap data={data} api={JsonCountries} />\r\n        </Card>\r\n        <div style={{ display: \"flex\", marginBottom: \"25px\" }}>\r\n          <Card\r\n            className={classes.pieCard}\r\n            onClick={() => handleOpen(\"genderGraph\")}\r\n          >\r\n            <DoughnutChart data={gendersData} />\r\n          </Card>\r\n          <Card\r\n            className={classes.ageBar}\r\n            onClick={() => handleOpen(\"ageGraph\")}\r\n          >\r\n            <BarGraphForAge data={ageData} />\r\n          </Card>\r\n        </div>\r\n        <div style={{ display: \"flex\", marginBottom: \"25px\" }}>\r\n          <Card\r\n            className={classes.meter}\r\n            onClick={() => handleOpen(\"meterGraph\")}\r\n          >\r\n            <TotalStudentsMeter data={totalStudentsfiltered} />\r\n            <h1 style={{ marginTop: 0 }}>Students</h1>\r\n          </Card>\r\n          <Card\r\n            className={classes.lineChart}\r\n            onClick={() => handleOpen(\"lineGraph\")}\r\n          >\r\n            <StudentEnrolledLineChart data={studentByYearData} />\r\n          </Card>\r\n        </div>\r\n        <div style={{ display: \"flex\", marginBottom: \"25px\" }}>\r\n          <Card\r\n            className={classes.halfPie}\r\n            onClick={() => handleOpen(\"halfPie\")}\r\n          >\r\n            <PieChartResidency data={residencyData} />\r\n          </Card>\r\n          <Card\r\n            className={classes.ptftPie}\r\n            onClick={() => handleOpen(\"ptftPie\")}\r\n          >\r\n            <PieChartPTFT data={ptftData} />\r\n          </Card>\r\n        </div>\r\n        <div style={{ display: \"flex\", marginBottom: \"25px\" }}>\r\n          <Card\r\n            className={classes.facultySpikyBar}\r\n            onClick={() => handleOpen(\"facultyGraph\")}\r\n          >\r\n            <FacultyBarGraph data={facultyData} />\r\n          </Card>\r\n          <Card\r\n            className={classes.gradStat}\r\n            onClick={() => handleOpen(\"gradStatusGraph\")}\r\n          >\r\n            <PieChartGradUngrad data={levelData} />\r\n          </Card>\r\n        </div>\r\n        <Card\r\n          className={classes.cgpaGraph}\r\n          onClick={() => handleOpen(\"cgpaGraph\")}\r\n        >\r\n          <AreaGraphCGPA data={cgpa} />\r\n        </Card>\r\n        <Card onClick={() => handleOpen(\"countryPop\")}>\r\n          <BarGraphCountryPop data={countriesByStudentCount} />\r\n        </Card>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./theme\";\r\nimport \"./App.css\";\r\nimport DashboardMain from \"./MainDashboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n  },\r\n  paper: {\r\n    flex: 1,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <div className={classes.toolbar} />\r\n          <DashboardMain />\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}